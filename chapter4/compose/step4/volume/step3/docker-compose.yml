version: '3.8'

services:
  # 1. MariaDB 데이터베이스 서비스
  db:
    image: mariadb:10.6 # MariaDB 이미지 사용
    environment:
      MARIADB_ROOT_PASSWORD: rootpassword # 루트 비밀번호
      MARIADB_DATABASE: mydatabase # 사용할 데이터베이스 이름
      MARIADB_USER: user # 사용자 이름
      MARIADB_PASSWORD: password # 사용자 비밀번호
    ports:
      - "3306:3306" # 호스트 3306 포트를 컨테이너 3306 포트에 연결 (선택 사항, 내부 통신용)
    volumes:
      # 네임드 볼륨: MariaDB 데이터 영속성을 위해 사용
      # 컨테이너가 삭제되어도 데이터는 'mariadb_data' 볼륨에 유지됩니다.
      - mariadb_data:/var/lib/mysql

  # 2. FastAPI 백엔드 서비스
  backend:
    build: ./backend # ./backend 디렉토리의 Dockerfile을 사용하여 이미지 빌드
    ports:
      - "8000:8000" # 호스트 8000 포트를 컨테이너 8000 포트에 연결 (Nginx를 통해 접근하므로 직접 접근은 선택 사항)
    volumes:
      # 바인드 마운트: 개발 중 소스 코드 변경 사항을 즉시 반영하기 위해 사용
      # 호스트의 ./backend 디렉토리가 컨테이너의 /app 디렉토리와 동기화됩니다.
      - ./backend:/app
      # 네임드 볼륨: FastAPI 애플리케이션 로그를 영속적으로 저장하기 위해 사용
      # 컨테이너가 삭제되어도 로그는 'backend_logs' 볼륨에 유지됩니다.
      - backend_logs:/app/logs
    environment:
      DATABASE_URL: mariadb+pymysql://user:password@db/mydatabase # DB 연결 URL
    depends_on:
      - db # db 서비스가 먼저 시작되도록 의존성 설정
    command: uvicorn main:app --host 0.0.0.0 --port 8000 # Uvicorn으로 FastAPI 앱 실행

  # 3. Nginx 웹 서버 서비스 (프론트엔드 서빙 및 백엔드 프록시)
  nginx:
    image: nginx:latest # Nginx 이미지 사용
    ports:
      - "80:80" # 웹 접근을 위해 호스트 80 포트를 컨테이너 80 포트에 연결
    volumes:
      # 바인드 마운트: Nginx 설정 파일을 호스트에서 관리하기 위해 사용
      # 호스트의 ./nginx/nginx.conf 파일이 컨테이너의 /etc/nginx/nginx.conf 파일과 동기화됩니다.
      - ./nginx/nginx.conf:/etc/nginx/nginx.conf:ro # 읽기 전용(ro)으로 마운트
      # 바인드 마운트: 프론트엔드 정적 파일을 호스트에서 관리하기 위해 사용
      # 호스트의 ./frontend 디렉토리가 컨테이너의 /usr/share/nginx/html 디렉토리와 동기화됩니다.
      - ./frontend:/usr/share/nginx/html
    depends_on:
      - backend # backend 서비스가 먼저 시작되도록 의존성 설정

# 최상위 레벨에서 사용할 네임드 볼륨들을 정의
volumes:
  mariadb_data: # MariaDB 데이터용 네임드 볼륨
  backend_logs: # FastAPI 로그용 네임드 볼륨