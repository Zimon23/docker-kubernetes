# 사용될 쿠버네티스 API 버전을 지정합니다.
# ReplicaSet, Deployment 등은 'apps/v1' API 그룹에 속합니다.
apiVersion: apps/v1

# 생성할 리소스의 종류를 지정합니다. 여기서는 'ReplicaSet'입니다.
kind: ReplicaSet

# 리소스의 부가 정보(이름, 레이블 등)를 정의하는 부분입니다.
metadata:
  # 이 레플리카셋의 고유한 이름입니다.
  name: replicaset-nginx

# 리소스의 '원하는 상태(Desired State)'를 상세하게 기술하는 부분입니다.
spec:
  # 이 레플리카셋이 관리할 파드의 복제본(replica) 개수를 지정합니다.
  # 쿠버네티스는 이 개수를 항상 유지하려고 노력합니다.
  replicas: 3

  # 레플리카셋이 어떤 파드를 자신의 관리 대상으로 삼을지 결정하는 '선택자'입니다.
  # 이 부분이 레플리카셋과 파드를 연결하는 핵심 고리입니다.
  selector:
    # 'matchLabels'에 정의된 레이블과 일치하는 파드들을 선택합니다.
    matchLabels:
      # 'app'이라는 키에 'my-nginx-pods-label'이라는 값을 가진 레이블이 붙은 파드들을 관리합니다.
      app: my-nginx-pods-label

  # 관리할 파드가 존재하지 않거나 복제본 개수가 부족할 때,
  # 파드를 생성하기 위한 '설계도(blueprint)' 또는 '템플릿'입니다.
  # 이 template 부분은 사실상 하나의 완전한 파드(Pod) 정의입니다.
  template:
    # 여기서부터는 생성될 파드의 'metadata'입니다.
    metadata:
      # 생성될 파드의 이름입니다.
      # 참고: 실제로는 'replicaset-nginx-xxxxx'처럼 레플리카셋 이름에 랜덤 문자열이 붙은 형태로 생성됩니다.
      name: my-nginx-pod

      # 생성될 파드에 붙여줄 레이블입니다.
      # ★★★ 가장 중요한 부분 ★★★
      # 템플릿의 이 레이블(labels)은 반드시 위 selector의 matchLabels와 일치해야 합니다.
      # 만약 일치하지 않으면, 레플리카셋은 자신이 관리할 수 없는 파드를 무한정 생성하는 오류에 빠집니다.
      labels:
        app: my-nginx-pods-label

    # 여기서부터는 생성될 파드의 'spec'입니다.
    spec:
      containers:
      - name: nginx
        image: nginx:latest
        ports:
        - containerPort: 80


# 레플리카셋 목록을 확인할 때.
#kubectl get replicasets.apps 
#kubectl get replicasets 
#kubectl get rs

# 레플리카셋 상세정보 확인할 때
#kubectl describe rs replicaset-nginx

#레플리카셋에 포함된 파드 목록을 확인할 때.
#kubectl get pods -l app=my-nginx-pods-label

#레플리카셋에 포함된 파드 상세정보 확인할 때.
#kubectl describe pod <pod-name>

#레플리카셋에 포함된 파드 삭제
#kubectl delete pod <pod-name>

#레플리카셋에 포함된 파드 목록을 확인 하면 자동으로 3개가 생성 되어 있다 
#kubectl get pods -l app=my-nginx-pods-label

