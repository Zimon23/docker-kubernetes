apiVersion: v1
kind: Service
metadata:
  name: hostname-svc-nodeport
spec:
  ports:
    - name: web-port
      port: 8080
      targetPort: 8000
  selector:
    app: webserver
  type: NodePort

#중요함
#NodePort는 클러스터 외부에서 내부 서비스에 접근할 수 있는 포트를 제공합니다.

#반드시 사전에 kubectl apply -f deployment-hostname.yaml 명령어으로 디프로이먼트를 실행해야 아래 서비스가 정상적으로 동작합니다.
#kubectl apply -f hostname-svc-nodeport.yaml 명령어로 적용해야 합니다.
#kubectl get  deployments.apps -o wide 로 실행 중인 deployments를 확인할 수 있습니다.
#kubectl get pod -o wide 로 실행 중인 pod를 확인할 수 있습니다.
#curl <pod-ip> 파드에서 실행중인 파드를 실행 할 수 있습니다
#kubectl get svc -o wide 로 실행 중인 service를 확인할 수 있습니다.
#실행 결과 
#NAME                    TYPE        CLUSTER-IP       EXTERNAL-IP   PORT(S)          AGE     SELECTOR
#hostname-svc-nodeport   NodePort    10.100.217.103   <none>        8080:30205/TCP   2m      app=webserver
#kubernetes              ClusterIP   10.96.0.1        <none>        443/TCP          3d14h   <none>

#PORT(S) 필드가 중요함
#8080:내부 포트, 30205:외부 포트
#외부 포트란 클러스터 외부(node의 ip)를 통해 접근할 수 있는 포트입니다.


#curl <NodePort>:8080 클러스터 ip:8080 포트로 입력을 받아 내부에서 실행중인 backend:80 포트로 포워딩하여  실행 할 수 있습니다.
#curl <NodePort>:8080 을 여러번 실행하여 부하 분산을 확인할 수 있습니다.
#node 각각에서 curl <NodePort>:8080 을 실행하여 부하 분산을 확인할 수 있습니다.
#master node 에서 curl <NodePort>:8080 을 실행하여 부하 분산을 확인할 수 있습니다.
#pod  curl <NodePort>:8080 을 실행하여 부하 분산을 확인할 수 있습니다.
#master node 에서 curl <NodePort>:8080 을 실행하여 부하 분산을 확인할 수 있습니다.

#중요함 
#NodePort는 노드의 IP 주소와 포트 번호를 통해 접근할 수 있습니다.
#curl 192.168.80.159:30205
#각 node의 아이피를 통해 접근을 확인해 보세요(반드시 node의 아이피를 확인하고 실행하세요) 

#외부에서 접근 할 수 있는 노드의 랜덤 포트는 30000 ~ 32768 까지 입니다
#ufw allow 30000:32768/tcp
#우분투 서버에서 실행할 경우 방화벽을 개방하면 접근 가능함 

